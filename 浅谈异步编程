浅谈异步编程
异步编程的分类
解决异步问题方法大致包括：直接回调,pub/sub模式(事件模式),异步库控制库(例如async,when),promise,Generator等。
1,回调函数
	回调函数是常用的解决异步的方法,经常接触和使用到,易于理解,并且在库或函数中非常容易实现
	问题：
		可能形成万恶的嵌套金字塔,代码不易阅读；
		只能对应一个回调函数,在很多场景中成为了一个限制；
2,pub/sub模式(事件)
	该模式称为事件模式,是回调函数的事件化,在jQuery等类库中非常常见
	事件发布订阅者模式本身并无同步与异步调用的问题,但是在node中,emit调用多半是伴随事件循环而异步触发的。该模式常用来解耦业务逻辑，事件发布者无须关注注册的回调函数,也不要用关注回调函数的个数,数据通过消息的方式可以很灵活的传递
	该模式的好处是：1.便于理解；2.不再局限于一个回调有函数
	不好的地方是：1.需要借助类库；2.事件与回调函数的顺序很重要


3,异步控制库
 	目前的异步库主要有Q,when.js,win.js,RSVP.js等
 	这些库的特点是代码是线性的,可以从上到下完成书写,符合自然习惯。
 	不好的地方也是风格各异,不关于阅读,增加学习成本。
4.Promise
5.Generator
